name: Build, test and push images on demand
on:
  push:
    branches: ['smaller-image']
  repository_dispatch:
    types: [updateall]
  workflow_dispatch:
jobs:
  buildtestandpush:
    # The type of runner that the job will run on
    strategy:
      fail-fast: true
      matrix:
        image: ["sharedpy3keras1.2", "mpra-dragonn", "extended_coda", "mmsplice",
          "mmsplice-mtsplice", "deepmel", "framepool", "kipoisplice", "deeptarget",
          "attentivechrome", "bpnet-oskn", "seqvec", "deepflybrain", "aparent-site_probabilities",
          "aparent-veff", "deepstarr"]
    runs-on: ubuntu-latest
    env:
      SINGULARITY_PULL_FOLDER: "/home/runner/singularity/"
      ZENODO_ACCESS_TOKEN: ${{ secrets.ZENODOACCESSTOKEN }}
      GITHUB_TOKEN: ${{ secrets.GITHUBPAT }}
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'
    - name: Setup Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17.8
    - name: Fetch system level dependencies
      run: sudo apt-get -q update && sudo apt-get install -y build-essential squashfs-tools
        libseccomp-dev cryptsetup libhdf5-serial-dev pkg-config
    - name: Build and install Apptainer
      run: |
        export VERSION=1.0.1 && \
        wget https://github.com/apptainer/apptainer/releases/download/v${VERSION}/apptainer-${VERSION}.tar.gz && \
        tar -xzf apptainer-${VERSION}.tar.gz && \
        cd apptainer-${VERSION}
        ./mconfig -v -p /usr/local
        make -C ./builddir all && sudo make -C ./builddir install
        cd ../ && rm apptainer-${VERSION}.tar.gz && rm -rf apptainer-${VERSION}
    - name: Install dependencies
      shell: bash -l {0}
      run: |
        mkdir -p /home/runner/singularity/
        python -m pip install --upgrade pip
        pip install .
    - name: Build and test ${{ matrix.image }}-slim
      shell: bash -l {0}
      run: |
        docker build -f dockerfiles/Dockerfile.kipoi-base-env-slim -t haimasree/kipoi-docker:kipoi-base-env-slim . 
        docker build -f dockerfiles/Dockerfile.${{ matrix.image }}-slim -t haimasree/kipoi-docker:${{ matrix.image }}-slim . 
        pytest -s test-containers/test_containers_from_command_line.py --image=haimasree/kipoi-docker:${{ matrix.image }}-slim
    - name: Push ${{ matrix.image }}-slim
      shell: bash -l {0}
      if: ${{ success() }}
      run: |
        docker login --username ${{ secrets.DOCKERUSERNAME }} --password ${{ secrets.DOCKERPASSWORD }}
        docker push haimasree/kipoi-docker:${{ matrix.image }}-slim
        docker system prune -a -f
  buildandtestsharedpy3keras2:
    # The type of runner that the job will run on
    strategy:
      fail-fast: true
      matrix:
        modelgroup: ["Basenji,Basset,HAL,DeepSEA,Optimus_5Prime,labranchor,CleTimer,SiSp,FactorNet,MaxEntScan,pwm_HOCOMOCO",
          "DeepBind", "lsgkm-SVM", "rbp_eclip", "Xpresso"]
    runs-on: ubuntu-latest
    env:
      SINGULARITY_PULL_FOLDER: "/home/runner/singularity/"
      ZENODO_ACCESS_TOKEN: ${{ secrets.ZENODOACCESSTOKEN }}
      GITHUB_TOKEN: ${{ secrets.GITHUBPAT }}
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'
    - name: Setup Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17.8
    - name: Fetch system level dependencies
      run: sudo apt-get -q update && sudo apt-get install -y build-essential squashfs-tools
        libseccomp-dev cryptsetup libhdf5-serial-dev pkg-config
    - name: Build and install Apptainer
      run: |
        export VERSION=1.0.1 && \
        wget https://github.com/apptainer/apptainer/releases/download/v${VERSION}/apptainer-${VERSION}.tar.gz && \
        tar -xzf apptainer-${VERSION}.tar.gz && \
        cd apptainer-${VERSION}
        ./mconfig -v -p /usr/local
        make -C ./builddir all && sudo make -C ./builddir install
    - name: Install dependencies
      shell: bash -l {0}
      run: |
        mkdir -p /home/runner/singularity/
        sudo apt-get update && sudo apt-get install -y libhdf5-serial-dev pkg-config
        python -m pip install --upgrade pip
        pip install .
    - name: Build and test sharedpy3keras2 with ${{ matrix.modelgroup }}-slim
      shell: bash -l {0}
      run: |
        docker build -f dockerfiles/Dockerfile.kipoi-base-env-slim -t haimasree/kipoi-docker:kipoi-base-env-slim . 
        docker build -f dockerfiles/Dockerfile.sharedpy3keras2-slim -t haimasree/kipoi-docker:sharedpy3keras2-slim . 
        pytest -s test-containers/test_containers_from_command_line.py --image=haimasree/kipoi-docker:sharedpy3keras2-slim --modelgroup=${{ matrix.modelgroup }}
  buildandpushkipoibaseenvandsharedpy3keras2:
    needs: [buildandtestsharedpy3keras2, buildtestandpush]
    runs-on: ubuntu-latest
    env:
      SINGULARITY_PULL_FOLDER: "/home/runner/singularity/"
      ZENODO_ACCESS_TOKEN: ${{ secrets.ZENODOACCESSTOKEN }}
      GITHUB_TOKEN: ${{ secrets.GITHUBPAT }}
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'
    - name: Setup Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17.8
    - name: Fetch system level dependencies
      run: sudo apt-get -q update && sudo apt-get install -y build-essential squashfs-tools
        libseccomp-dev cryptsetup libhdf5-serial-dev pkg-config
    - name: Build and install Apptainer
      run: |
        export VERSION=1.0.1 && \
        wget https://github.com/apptainer/apptainer/releases/download/v${VERSION}/apptainer-${VERSION}.tar.gz && \
        tar -xzf apptainer-${VERSION}.tar.gz && \
        cd apptainer-${VERSION}
        ./mconfig -v -p /usr/local
        make -C ./builddir all && sudo make -C ./builddir install 
    - name: Install dependencies
      shell: bash -l {0}
      run: |
        mkdir -p /home/runner/singularity/
        sudo apt-get update && sudo apt-get install -y libhdf5-serial-dev pkg-config
        python -m pip install --upgrade pip
        pip install .
    - name: Build sharedpy3keras2 and kipoi-base-env
      shell: bash -l {0}
      run: |
        docker build -f dockerfiles/Dockerfile.kipoi-base-env-slim -t haimasree/kipoi-docker:kipoi-base-env-slim . 
        docker build -f dockerfiles/Dockerfile.sharedpy3keras2-slim -t haimasree/kipoi-docker:sharedpy3keras2-slim . 
    - name: Push kipoi-base-env-slim and sharedpy3keras2-slim
      shell: bash -l {0}
      if: ${{ success() }}
      run: |
        docker login --username ${{ secrets.DOCKERUSERNAME }} --password ${{ secrets.DOCKERPASSWORD }}
        docker push haimasree/kipoi-docker:kipoi-base-env-slim
        docker push haimasree/kipoi-docker:sharedpy3keras2-slim
        docker system prune -a -f