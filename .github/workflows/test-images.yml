name: CI
on:
  push:
    branches: ['**']
  pull_request:
    branches: [main]
  schedule:
  # Triggers the workflow 9:00 PM every sunday
  - cron: "0 21 * * 0"
jobs:
  build:

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: psf/black@stable
    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 
        pip install .
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
  test:
    strategy:
      fail-fast: false
      matrix:
        model: ["Basenji,Basset,HAL,DeepSEA/variantEffects,Optimus_5Prime", "labranchor,CleTimer/customBP,SiSp",
          "FactorNet/FOXA2/onePeak_Unique35_DGF,MaxEntScan/5prime,pwm_HOCOMOCO/human/AHR",
          "DeepBind/Arabidopsis_thaliana/RBP/D00283.001_RNAcompete_At_0284,lsgkm-SVM/Chip/OpenChrom/Cmyc/K562,rbp_eclip/AARS",
          "CpGenie/A549_ENCSR000DDI,Divergent421,DeepCpG_DNA/Hou2016_HepG2_dna", "MPRA-DragoNN/DeepFactorizedModel",
          "extended_coda", "MMSplice/deltaLogitPSI", "MMSplice/mtsplice", "DeepMEL/DeepMEL",
          "Framepool", "KipoiSplice/4", "deepTarget", "AttentiveChrome/E003", "BPNet-OSKN",
          "SeqVec/embedding", "Xpresso/human_GM12878", "epidermal_basset/encode-roadmap.basset.clf.testfold-0",
          "DeepFlyBrain", "APARENT/site_probabilities", "APARENT/veff", "DeepSTARR"]
    runs-on: ubuntu-latest
    env:
      SINGULARITY_PULL_FOLDER: "/home/runner/singularity/"
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'
    - name: Install
      uses: conda-incubator/setup-miniconda@v2
      with:
        activate-environment: py310
        environment-file: environment.ubuntu.singularity.yml
        python-version: '3.10'
        auto-activate-base: false
    - name: Install dependencies
      shell: bash -l {0}
      run: |
        mkdir -p /home/runner/singularity/
        sudo apt-get update && sudo apt-get install -y libhdf5-serial-dev pkg-config squashfs-tools
        python -m pip install --upgrade pip
        pip install .
    - name: Test with pytest
      shell: bash -l {0}
      run: |
        pytest -s test-containers/test_models_from_command_line.py --model=${{ matrix.model }}
        docker system prune -a -f
  testdockerandsingularity:

    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      ZENODO_ACCESS_TOKEN: ${{ secrets.ZENODOACCESSTOKEN }}
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        sudo apt-get update && sudo apt-get install -y libhdf5-serial-dev pkg-config squashfs-tools
        python -m pip install --upgrade pip
        pip install .
    - name: Test kipoi_containers and send coverage report to coveralls.io
      run: |-
        pip install coveralls
        docker pull kipoi/kipoi-docker:mmsplice
        coverage run -m pytest -s test-docker/test_docker_handler.py test-singularity test-containers/test_update_all_singularity_images.py
        coveralls --service=github
